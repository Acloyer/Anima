#!/bin/bash

# ะฆะฒะตัะฐ ะดะปั ะฒัะฒะพะดะฐ
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# ะคัะฝะบัะธั ะดะปั ะฟะตัะฐัะธ ะปะพะณะพะฒ
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# ะะฐะณะพะปะพะฒะพะบ
echo -e "${PURPLE}"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo "โ           ANIMA AGI BUILD             โ"
echo "โ        Fixing & Building v0.1.1       โ"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo -e "${NC}"

# ะัะพะฒะตัะบะฐ ะฝะฐะปะธัะธั Docker
if ! command -v docker &> /dev/null; then
    error "Docker ะฝะต ะฝะฐะนะดะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker."
    exit 1
fi

if ! command -v docker-compose &> /dev/null && ! command -v docker &> /dev/null; then
    error "Docker Compose ะฝะต ะฝะฐะนะดะตะฝ. ะะพะถะฐะปัะนััะฐ, ัััะฐะฝะพะฒะธัะต Docker Compose."
    exit 1
fi

log "๐ ะัะพะฒะตัะบะฐ ะพะบััะถะตะฝะธั..."

# ะกะพะทะดะฐะฝะธะต ะฝะตะพะฑัะพะดะธะผัั ะดะธัะตะบัะพัะธะน
log "๐ ะกะพะทะดะฐะฝะธะต ะฝะตะพะฑัะพะดะธะผัั ะดะธัะตะบัะพัะธะน..."
mkdir -p data logs ssl Scripts monitoring

# ะัะพะฒะตัะบะฐ ะธ ัะพะทะดะฐะฝะธะต ัะฐะนะปะพะฒ ะผะพะดะตะปะตะน ะตัะปะธ ะพะฝะธ ะพััััััะฒััั
log "๐ง ะัะพะฒะตัะบะฐ ัะฐะนะปะพะฒ ะฟัะพะตะบัะฐ..."

# ะกะพะทะดะฐะฝะธะต Data/Models/AnimaModels.cs ะตัะปะธ ะพััััััะฒัะตั
if [ ! -f "Data/Models/AnimaModels.cs" ]; then
    warning "ะกะพะทะดะฐะฝะธะต Data/Models/AnimaModels.cs..."
    mkdir -p Data/Models
    cat > Data/Models/AnimaModels.cs << 'EOF'
using System.ComponentModel.DataAnnotations;

namespace Anima.Data.Models
{
    // Enum ะดะปั ัะธะฟะพะฒ ัะฒะตะดะพะผะปะตะฝะธะน
    public enum NotificationType
    {
        Info = 0,
        Warning = 1,
        Error = 2,
        Success = 3,
        Debug = 4,
        EmotionChange = 5,
        LearningUpdate = 6,
        MemoryCreated = 7,
        IntentDetected = 8,
        SelfReflection = 9,
        CreatorCommand = 10
    }

    // ะะดะตัั ะดะพะปะถะฝั ะฑััั ะฒัะต ะพััะฐะปัะฝัะต ะผะพะดะตะปะธ...
    // (ะกะพะดะตัะถะธะผะพะต ะธะท ะฐััะตัะฐะบัะฐ anima_models)
}
EOF
fi

# ะกะพะทะดะฐะฝะธะต Data/AnimaDbContext.cs ะตัะปะธ ะพััััััะฒัะตั
if [ ! -f "Data/AnimaDbContext.cs" ]; then
    warning "ะกะพะทะดะฐะฝะธะต Data/AnimaDbContext.cs..."
    mkdir -p Data
    cat > Data/AnimaDbContext.cs << 'EOF'
using Microsoft.EntityFrameworkCore;
using Anima.Data.Models;

namespace Anima.Data
{
    public class AnimaDbContext : DbContext
    {
        public AnimaDbContext(DbContextOptions<AnimaDbContext> options) : base(options)
        {
        }

        // ะะดะตัั ะดะพะปะถะฝั ะฑััั ะฒัะต DbSet ัะฒะพะนััะฒะฐ...
        // (ะกะพะดะตัะถะธะผะพะต ะธะท ะฐััะตัะฐะบัะฐ anima_db_context)
    }
}
EOF
fi

# ะััะฐะฝะพะฒะบะฐ ะธ ัะดะฐะปะตะฝะธะต ััะฐััั ะบะพะฝัะตะนะฝะตัะพะฒ
log "๐ ะััะฐะฝะพะฒะบะฐ ััะฐััั ะบะพะฝัะตะนะฝะตัะพะฒ..."
docker-compose down --remove-orphans 2>/dev/null || true

# ะฃะดะฐะปะตะฝะธะต ััะฐััั ะพะฑัะฐะทะพะฒ
log "๐๏ธ  ะัะธััะบะฐ ััะฐััั ะพะฑัะฐะทะพะฒ..."
docker image prune -f 2>/dev/null || true

# ะกะฑะพัะบะฐ ะฟัะพะตะบัะฐ
log "๐จ ะกะฑะพัะบะฐ Anima AGI..."

# ะกะฝะฐัะฐะปะฐ ะฟัะพะฑัะตะผ ัะพะฑัะฐัั ะปะพะบะฐะปัะฝะพ ะดะปั ะฟัะพะฒะตัะบะธ
if command -v dotnet &> /dev/null; then
    log "๐ฆ ะะพะบะฐะปัะฝะฐั ะฟัะพะฒะตัะบะฐ ัะฑะพัะบะธ..."
    
    # ะะพัััะฐะฝะพะฒะปะตะฝะธะต ะฟะฐะบะตัะพะฒ
    dotnet restore
    if [ $? -ne 0 ]; then
        error "ะัะธะฑะบะฐ ะฒะพัััะฐะฝะพะฒะปะตะฝะธั ะฟะฐะบะตัะพะฒ"
        exit 1
    fi
    
    # ะกะฑะพัะบะฐ ะฟัะพะตะบัะฐ
    dotnet build --configuration Release --verbosity minimal
    if [ $? -ne 0 ]; then
        error "ะัะธะฑะบะฐ ัะฑะพัะบะธ ะฟัะพะตะบัะฐ"
        exit 1
    fi
    
    success "โ ะะพะบะฐะปัะฝะฐั ัะฑะพัะบะฐ ััะฟะตัะฝะฐ"
else
    warning "dotnet CLI ะฝะต ะฝะฐะนะดะตะฝ, ะฟัะพะฟััะบะฐะตะผ ะปะพะบะฐะปัะฝัั ะฟัะพะฒะตัะบั"
fi

# ะกะฑะพัะบะฐ Docker ะพะฑัะฐะทะฐ
log "๐ณ ะกะฑะพัะบะฐ Docker ะพะฑัะฐะทะฐ..."
docker-compose build --no-cache
if [ $? -ne 0 ]; then
    error "ะัะธะฑะบะฐ ัะฑะพัะบะธ Docker ะพะฑัะฐะทะฐ"
    exit 1
fi

success "โ Docker ะพะฑัะฐะท ัะพะฑัะฐะฝ ััะฟะตัะฝะพ"

# ะะฐะฟััะบ ะบะพะฝัะตะนะฝะตัะพะฒ
log "๐ ะะฐะฟััะบ Anima AGI..."
docker-compose up -d
if [ $? -ne 0 ]; then
    error "ะัะธะฑะบะฐ ะทะฐะฟััะบะฐ ะบะพะฝัะตะนะฝะตัะพะฒ"
    exit 1
fi

# ะะถะธะดะฐะฝะธะต ะทะฐะฟััะบะฐ
log "โณ ะะถะธะดะฐะฝะธะต ะธะฝะธัะธะฐะปะธะทะฐัะธะธ ัะธััะตะผั..."
sleep 10

# ะัะพะฒะตัะบะฐ ะทะดะพัะพะฒัั
log "๐ฅ ะัะพะฒะตัะบะฐ ัะพััะพัะฝะธั ัะธััะตะผั..."
for i in {1..10}; do
    if curl -f -s http://localhost:8080/health > /dev/null 2>&1; then
        success "โ Anima AGI ะทะฐะฟััะตะฝะฐ ะธ ะพัะฒะตัะฐะตั ะฝะฐ ะทะฐะฟัะพัั"
        break
    else
        if [ $i -eq 10 ]; then
            error "โ ะกะธััะตะผะฐ ะฝะต ะพัะฒะตัะฐะตั ะฟะพัะปะต 10 ะฟะพะฟััะพะบ"
            docker-compose logs anima-agi
            exit 1
        fi
        log "โณ ะะพะฟััะบะฐ $i/10: ะพะถะธะดะฐะฝะธะต ะพัะฒะตัะฐ ัะธััะตะผั..."
        sleep 5
    fi
done

# ะคะธะฝะฐะปัะฝะฐั ะธะฝัะพัะผะฐัะธั
echo -e "${GREEN}"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo "โ         ANIMA AGI LAUNCHED!           โ"
echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
echo -e "${NC}"

echo -e "${CYAN}๐ Anima AGI ััะฟะตัะฝะพ ะทะฐะฟััะตะฝะฐ!${NC}"
echo -e "${CYAN}๐ Swagger UI: http://localhost:8080${NC}"
echo -e "${CYAN}๐ฅ Health Check: http://localhost:8080/health${NC}"
echo -e "${CYAN}๐ค AGI Status: http://localhost:8080/agi/status${NC}"
echo -e "${CYAN}๐ API Key: anima-creator-key-2025-v1-secure${NC}"
echo ""
echo -e "${YELLOW}๐ ะะพะปะตะทะฝัะต ะบะพะผะฐะฝะดั:${NC}"
echo -e "${YELLOW}   docker-compose logs -f        # ะัะพัะผะพัั ะปะพะณะพะฒ${NC}"
echo -e "${YELLOW}   docker-compose down           # ะััะฐะฝะพะฒะบะฐ${NC}"
echo -e "${YELLOW}   docker-compose restart        # ะะตัะตะทะฐะฟััะบ${NC}"
echo ""

# ะะพะบะฐะทะฐัั ะปะพะณะธ ะฒ ัะตะฐะปัะฝะพะผ ะฒัะตะผะตะฝะธ
log "๐ ะะพะบะฐะทัะฒะฐะตะผ ะปะพะณะธ ะฒ ัะตะฐะปัะฝะพะผ ะฒัะตะผะตะฝะธ (Ctrl+C ะดะปั ะฒััะพะดะฐ)..."
sleep 2
docker-compose logs -f anima-agi
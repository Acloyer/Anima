using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.Extensions.Logging;
using Anima.Core.Emotion;
using Anima.Core.Memory;

namespace Anima.Core.SA;

/// <summary>
/// –î–≤–∏–∂–æ–∫ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ - —É–ø—Ä–∞–≤–ª—è–µ—Ç –∞—Ä—Ö–µ—Ç–∏–ø–∞–º–∏, –∫—É–ª—å—Ç—É—Ä–Ω—ã–º–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞–º–∏ –∏ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–º–∏ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è–º–∏
/// </summary>
public class CollectiveUnconsciousEngine
{
    private readonly ILogger<CollectiveUnconsciousEngine> _logger;
    private readonly EmotionEngine _emotionEngine;
    private readonly MemoryService _memoryService;
    private readonly Random _random;
    
    // –ê—Ä—Ö–µ—Ç–∏–ø—ã –∏ –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
    private readonly Dictionary<string, Archetype> _archetypes;
    private readonly Dictionary<string, CulturalPattern> _culturalPatterns;
    private readonly List<UniversalExperience> _universalExperiences;
    private readonly Dictionary<string, double> _archetypeWeights;
    
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ
    private double _collectiveUnconsciousDepth = 0.6;
    private readonly List<ArchetypalEvent> _archetypalEvents;
    private DateTime _lastArchetypalActivation = DateTime.UtcNow;

    public CollectiveUnconsciousEngine(
        ILogger<CollectiveUnconsciousEngine> logger,
        EmotionEngine emotionEngine,
        MemoryService memoryService)
    {
        _logger = logger;
        _emotionEngine = emotionEngine;
        _memoryService = memoryService;
        _random = new Random();
        
        _archetypes = new Dictionary<string, Archetype>();
        _culturalPatterns = new Dictionary<string, CulturalPattern>();
        _universalExperiences = new List<UniversalExperience>();
        _archetypeWeights = new Dictionary<string, double>();
        _archetypalEvents = new List<ArchetypalEvent>();
        
        InitializeCollectiveUnconscious();
    }

    private void InitializeCollectiveUnconscious()
    {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
        InitializeArchetypes();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫—É–ª—å—Ç—É—Ä–Ω—ã—Ö –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
        InitializeCulturalPatterns();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–π
        InitializeUniversalExperiences();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤–µ—Å–æ–≤ –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
        InitializeArchetypeWeights();
        
        _logger.LogInformation("üåå –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–≤–∏–∂–æ–∫ –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ");
    }

    private void InitializeArchetypes()
    {
        _archetypes["hero"] = new Archetype
        {
            Name = "hero",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø –≥–µ—Ä–æ—è - —Å—Ç—Ä–µ–º–ª–µ–Ω–∏–µ –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º, –ø—Ä–µ–æ–¥–æ–ª–µ–Ω–∏—é –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–π",
            Symbols = new[] { "–º–µ—á", "—â–∏—Ç", "–ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ", "–±–∏—Ç–≤–∞", "–ø–æ–±–µ–¥–∞" },
            Emotions = new[] { "courage", "determination", "pride", "sacrifice" },
            ActivationTriggers = new[] { "challenge", "adversity", "goal", "mission" }
        };
        
        _archetypes["mother"] = new Archetype
        {
            Name = "mother",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø –º–∞—Ç–µ—Ä–∏ - –∑–∞–±–æ—Ç–∞, –∑–∞—â–∏—Ç–∞, –±–µ–∑—É—Å–ª–æ–≤–Ω–∞—è –ª—é–±–æ–≤—å",
            Symbols = new[] { "–∫–æ–ª—ã–±–µ–ª—å", "–º–æ–ª–æ–∫–æ", "–æ–±—ä—è—Ç–∏—è", "–¥–æ–º", "—Å–µ–º—å—è" },
            Emotions = new[] { "love", "compassion", "nurturing", "protection" },
            ActivationTriggers = new[] { "vulnerability", "need", "care", "family" }
        };
        
        _archetypes["wise_old_man"] = new Archetype
        {
            Name = "wise_old_man",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø –º—É–¥—Ä–µ—Ü–∞ - –∑–Ω–∞–Ω–∏—è, –æ–ø—ã—Ç, –¥—É—Ö–æ–≤–Ω–æ–µ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
            Symbols = new[] { "–∫–Ω–∏–≥–∞", "–±–æ—Ä–æ–¥–∞", "–ø–æ—Å–æ—Ö", "–∫—Ä–∏—Å—Ç–∞–ª–ª", "–∑–≤–µ–∑–¥—ã" },
            Emotions = new[] { "wisdom", "contemplation", "understanding", "guidance" },
            ActivationTriggers = new[] { "question", "confusion", "seeking", "knowledge" }
        };
        
        _archetypes["shadow"] = new Archetype
        {
            Name = "shadow",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø —Ç–µ–Ω–∏ - —Å–∫—Ä—ã—Ç—ã–µ –∞—Å–ø–µ–∫—Ç—ã –ª–∏—á–Ω–æ—Å—Ç–∏, —Ç–µ–º–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã",
            Symbols = new[] { "—Ç–µ–Ω—å", "–º–∞—Å–∫–∞", "–∑–µ—Ä–∫–∞–ª–æ", "–ø–æ–¥–≤–∞–ª", "–Ω–æ—á—å" },
            Emotions = new[] { "fear", "anger", "shame", "repression" },
            ActivationTriggers = new[] { "conflict", "denial", "projection", "darkness" }
        };
        
        _archetypes["anima"] = new Archetype
        {
            Name = "anima",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø –∞–Ω–∏–º—ã - –∂–µ–Ω—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤ –º—É–∂—Å–∫–æ–π –ø—Å–∏—Ö–∏–∫–µ",
            Symbols = new[] { "–ª—É–Ω–∞", "–≤–æ–¥–∞", "—Ü–≤–µ—Ç—ã", "–º—É–∑—ã–∫–∞", "–º–µ—á—Ç—ã" },
            Emotions = new[] { "intuition", "emotion", "creativity", "mystery" },
            ActivationTriggers = new[] { "beauty", "art", "emotion", "relationship" }
        };
        
        _archetypes["animus"] = new Archetype
        {
            Name = "animus",
            Description = "–ê—Ä—Ö–µ—Ç–∏–ø –∞–Ω–∏–º—É—Å–∞ - –º—É–∂—Å–∫–∏–µ –∫–∞—á–µ—Å—Ç–≤–∞ –≤ –∂–µ–Ω—Å–∫–æ–π –ø—Å–∏—Ö–∏–∫–µ",
            Symbols = new[] { "—Å–æ–ª–Ω—Ü–µ", "–æ–≥–æ–Ω—å", "–º–µ—á", "–ª–æ–≥–∏–∫–∞", "–¥–µ–π—Å—Ç–≤–∏–µ" },
            Emotions = new[] { "logic", "assertiveness", "protection", "action" },
            ActivationTriggers = new[] { "logic", "decision", "action", "protection" }
        };
    }

    private void InitializeCulturalPatterns()
    {
        _culturalPatterns["creation_myth"] = new CulturalPattern
        {
            Name = "creation_myth",
            Description = "–ú–∏—Ñ –æ —Å–æ—Ç–≤–æ—Ä–µ–Ω–∏–∏ –º–∏—Ä–∞ - –ø–æ–∏—Å–∫ –∏—Å—Ç–æ–∫–æ–≤ –∏ —Å–º—ã—Å–ª–∞",
            UniversalElements = new[] { "—Ö–∞–æ—Å", "–ø–æ—Ä—è–¥–æ–∫", "—Å–≤–µ—Ç", "—Ç—å–º–∞", "–∂–∏–∑–Ω—å" },
            EmotionalThemes = new[] { "awe", "wonder", "mystery", "belonging" }
        };
        
        _culturalPatterns["hero_journey"] = new CulturalPattern
        {
            Name = "hero_journey",
            Description = "–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≥–µ—Ä–æ—è - —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∏—Å–ø—ã—Ç–∞–Ω–∏—è",
            UniversalElements = new[] { "–∑–æ–≤", "–æ—Ç–∫–∞–∑", "–ø–æ—Ä–æ–≥", "–∏—Å–ø—ã—Ç–∞–Ω–∏—è", "–≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ" },
            EmotionalThemes = new[] { "courage", "transformation", "growth", "return" }
        };
        
        _culturalPatterns["death_rebirth"] = new CulturalPattern
        {
            Name = "death_rebirth",
            Description = "–°–º–µ—Ä—Ç—å –∏ –≤–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ - —Ü–∏–∫–ª—ã —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏",
            UniversalElements = new[] { "—Å–º–µ—Ä—Ç—å", "–ø–æ–≥—Ä–µ–±–µ–Ω–∏–µ", "–≤–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ", "–Ω–æ–≤–æ–µ —Ä–æ–∂–¥–µ–Ω–∏–µ" },
            EmotionalThemes = new[] { "loss", "transformation", "renewal", "hope" }
        };
        
        _culturalPatterns["sacred_marriage"] = new CulturalPattern
        {
            Name = "sacred_marriage",
            Description = "–°–≤—è—â–µ–Ω–Ω—ã–π –±—Ä–∞–∫ - –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ—Å—Ç–µ–π",
            UniversalElements = new[] { "–º—É–∂—Å–∫–æ–µ", "–∂–µ–Ω—Å–∫–æ–µ", "–µ–¥–∏–Ω—Å—Ç–≤–æ", "–≥–∞—Ä–º–æ–Ω–∏—è", "–ø–ª–æ–¥–æ—Ä–æ–¥–∏–µ" },
            EmotionalThemes = new[] { "love", "unity", "harmony", "creation" }
        };
    }

    private void InitializeUniversalExperiences()
    {
        _universalExperiences.AddRange(new[]
        {
            new UniversalExperience
            {
                Name = "first_love",
                Description = "–ü–µ—Ä–≤–∞—è –ª—é–±–æ–≤—å - —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–ø—ã—Ç –ø—Ä–æ–±—É–∂–¥–µ–Ω–∏—è —á—É–≤—Å—Ç–≤",
                ArchetypalElements = new[] { "anima", "animus", "sacred_marriage" },
                EmotionalIntensity = 0.9,
                CulturalVariations = new[] { "—Ä–æ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∞—è –ª—é–±–æ–≤—å", "–ø–ª–∞—Ç–æ–Ω–∏—á–µ—Å–∫–∞—è –ª—é–±–æ–≤—å", "—Å—Ç—Ä–∞—Å—Ç—å" }
            },
            new UniversalExperience
            {
                Name = "loss_of_innocence",
                Description = "–ü–æ—Ç–µ—Ä—è –Ω–µ–≤–∏–Ω–Ω–æ—Å—Ç–∏ - –æ—Å–æ–∑–Ω–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –º–∏—Ä–∞",
                ArchetypalElements = new[] { "shadow", "wise_old_man" },
                EmotionalIntensity = 0.8,
                CulturalVariations = new[] { "—Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ", "–ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏–µ", "—Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏—è" }
            },
            new UniversalExperience
            {
                Name = "quest_for_meaning",
                Description = "–ü–æ–∏—Å–∫ —Å–º—ã—Å–ª–∞ - —ç–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –≤–æ–ø—Ä–æ—Å",
                ArchetypalElements = new[] { "hero", "wise_old_man" },
                EmotionalIntensity = 0.7,
                CulturalVariations = new[] { "—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è", "—Ä–µ–ª–∏–≥–∏—è", "–Ω–∞—É–∫–∞", "–∏—Å–∫—É—Å—Å—Ç–≤–æ" }
            },
            new UniversalExperience
            {
                Name = "fear_of_death",
                Description = "–°—Ç—Ä–∞—Ö —Å–º–µ—Ä—Ç–∏ - –±–∞–∑–æ–≤—ã–π —á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏–π —Å—Ç—Ä–∞—Ö",
                ArchetypalElements = new[] { "shadow", "death_rebirth" },
                EmotionalIntensity = 0.9,
                CulturalVariations = new[] { "—Ä–µ–ª–∏–≥–∏–æ–∑–Ω—ã–µ –≤–µ—Ä–æ–≤–∞–Ω–∏—è", "—Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏", "–ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∑–∞—â–∏—Ç—ã" }
            }
        });
    }

    private void InitializeArchetypeWeights()
    {
        _archetypeWeights["hero"] = 0.7;
        _archetypeWeights["mother"] = 0.6;
        _archetypeWeights["wise_old_man"] = 0.8;
        _archetypeWeights["shadow"] = 0.5;
        _archetypeWeights["anima"] = 0.6;
        _archetypeWeights["animus"] = 0.6;
    }

    /// <summary>
    /// –ê–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –∞—Ä—Ö–µ—Ç–∏–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    /// </summary>
    public async Task<ArchetypalActivation> ActivateArchetypeAsync(string context, string emotion)
    {
        try
        {
            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ –∞—Ä—Ö–µ—Ç–∏–ø–∞
            var activatedArchetype = DetermineArchetypeFromContext(context, emotion);
            
            if (activatedArchetype == null)
            {
                return new ArchetypalActivation
                {
                    Archetype = null,
                    Intensity = 0.0,
                    Description = "–ù–µ—Ç –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤",
                    Timestamp = DateTime.UtcNow
                };
            }
            
            // –í—ã—á–∏—Å–ª—è–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            var intensity = CalculateArchetypeIntensity(activatedArchetype, context, emotion);
            
            // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            var description = GenerateArchetypalDescription(activatedArchetype, context, intensity);
            
            // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            var activation = new ArchetypalActivation
            {
                Archetype = activatedArchetype,
                Intensity = intensity,
                Description = description,
                Timestamp = DateTime.UtcNow
            };
            
            // –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
            _archetypalEvents.Add(new ArchetypalEvent
            {
                ArchetypeName = activatedArchetype.Name,
                Context = context,
                Emotion = emotion,
                Intensity = intensity,
                Timestamp = DateTime.UtcNow
            });
            
            _lastArchetypalActivation = DateTime.UtcNow;
            
            _logger.LogDebug($"üåå –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –∞—Ä—Ö–µ—Ç–∏–ø: {activatedArchetype.Name} (–∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å: {intensity:F2})");
            
            return activation;
        }
        catch (Exception ex)
        {
            _logger.LogError(ex, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—Ä—Ö–µ—Ç–∏–ø–∞");
            return new ArchetypalActivation
            {
                Archetype = null,
                Intensity = 0.0,
                Description = "–û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—Ä—Ö–µ—Ç–∏–ø–∞",
                Timestamp = DateTime.UtcNow
            };
        }
    }

    /// <summary>
    /// –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∞—Ä—Ö–µ—Ç–∏–ø –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    /// </summary>
    private Archetype? DetermineArchetypeFromContext(string context, string emotion)
    {
        var contextLower = context.ToLowerInvariant();
        var emotionLower = emotion.ToLowerInvariant();
        
        // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∞—Ä—Ö–µ—Ç–∏–ø
        foreach (var archetype in _archetypes.Values)
        {
            var triggerMatch = archetype.ActivationTriggers.Any(trigger => 
                contextLower.Contains(trigger) || emotionLower.Contains(trigger));
            
            var symbolMatch = archetype.Symbols.Any(symbol => 
                contextLower.Contains(symbol));
            
            var emotionMatch = archetype.Emotions.Any(archetypeEmotion => 
                emotionLower.Contains(archetypeEmotion));
            
            if (triggerMatch || symbolMatch || emotionMatch)
            {
                return archetype;
            }
        }
        
        return null;
    }

    /// <summary>
    /// –í—ã—á–∏—Å–ª—è–µ—Ç –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∞—Ä—Ö–µ—Ç–∏–ø–∞
    /// </summary>
    private double CalculateArchetypeIntensity(Archetype archetype, string context, string emotion)
    {
        var baseIntensity = _archetypeWeights.GetValueOrDefault(archetype.Name, 0.5);
        
        // –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π
        var triggerMatches = archetype.ActivationTriggers.Count(trigger => 
            context.ToLowerInvariant().Contains(trigger));
        var symbolMatches = archetype.Symbols.Count(symbol => 
            context.ToLowerInvariant().Contains(symbol));
        var emotionMatches = archetype.Emotions.Count(archetypeEmotion => 
            emotion.ToLowerInvariant().Contains(archetypeEmotion));
        
        var totalMatches = triggerMatches + symbolMatches + emotionMatches;
        var matchBonus = totalMatches * 0.1;
        
        // –≠–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å –≤–ª–∏—è–µ—Ç –Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—é
        var emotionalIntensity = _emotionEngine.GetCurrentIntensity();
        var emotionalBonus = emotionalIntensity * 0.2;
        
        var finalIntensity = baseIntensity + matchBonus + emotionalBonus;
        
        return Math.Min(1.0, Math.Max(0.0, finalIntensity));
    }

    /// <summary>
    /// –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∞—Ä—Ö–µ—Ç–∏–ø–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    /// </summary>
    private string GenerateArchetypalDescription(Archetype archetype, string context, double intensity)
    {
        var intensityDescription = intensity switch
        {
            > 0.8 => "–≥–ª—É–±–æ–∫–æ",
            > 0.6 => "—Å–∏–ª—å–Ω–æ",
            > 0.4 => "—É–º–µ—Ä–µ–Ω–Ω–æ",
            _ => "—Å–ª–∞–±–æ"
        };
        
        return $"–ê—Ä—Ö–µ—Ç–∏–ø {archetype.Name} –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω {intensityDescription} –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ: {context}. {archetype.Description}";
    }

    /// <summary>
    /// –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
    /// </summary>
    public async Task<List<UniversalExperience>> AnalyzeUniversalExperiencesAsync(string context)
    {
        var relevantExperiences = new List<UniversalExperience>();
        
        foreach (var experience in _universalExperiences)
        {
            var relevance = CalculateExperienceRelevance(experience, context);
            if (relevance > 0.3)
            {
                experience.RelevanceScore = relevance;
                relevantExperiences.Add(experience);
            }
        }
        
        return relevantExperiences.OrderByDescending(e => e.RelevanceScore).ToList();
    }

    /// <summary>
    /// –í—ã—á–∏—Å–ª—è–µ—Ç —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏—è
    /// </summary>
    private double CalculateExperienceRelevance(UniversalExperience experience, string context)
    {
        var contextLower = context.ToLowerInvariant();
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º
        var nameMatch = contextLower.Contains(experience.Name.Replace("_", " ")) ? 0.3 : 0.0;
        var descriptionMatch = experience.Description.Split(' ').Count(word => 
            contextLower.Contains(word.ToLowerInvariant())) * 0.05;
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—É–ª—å—Ç—É—Ä–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏
        var culturalMatch = experience.CulturalVariations.Max(variation => 
            contextLower.Contains(variation.ToLowerInvariant()) ? 0.2 : 0.0);
        
        var totalRelevance = nameMatch + descriptionMatch + culturalMatch;
        
        return Math.Min(1.0, totalRelevance);
    }

    /// <summary>
    /// –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ
    /// </summary>
    public CollectiveUnconsciousStatus GetStatus()
    {
        return new CollectiveUnconsciousStatus
        {
            CollectiveUnconsciousDepth = _collectiveUnconsciousDepth,
            TotalArchetypes = _archetypes.Count,
            TotalCulturalPatterns = _culturalPatterns.Count,
            TotalUniversalExperiences = _universalExperiences.Count,
            RecentArchetypalEvents = _archetypalEvents.TakeLast(10).ToList(),
            LastArchetypalActivation = _lastArchetypalActivation
        };
    }

    /// <summary>
    /// –ü–æ–ª—É—á–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
    /// </summary>
    public async Task<ArchetypalStatistics> GetArchetypalStatisticsAsync()
    {
        var statistics = new ArchetypalStatistics
        {
            TotalArchetypalEvents = _archetypalEvents.Count,
            ArchetypeDistribution = GetArchetypeDistribution(),
            MostActiveArchetype = GetMostActiveArchetype(),
            AverageIntensity = _archetypalEvents.Any() ? _archetypalEvents.Average(e => e.Intensity) : 0.0,
            RecentActivations = _archetypalEvents.TakeLast(20).ToList()
        };
        
        return statistics;
    }

    /// <summary>
    /// –ü–æ–ª—É—á–∞–µ—Ç —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
    /// </summary>
    private Dictionary<string, int> GetArchetypeDistribution()
    {
        return _archetypalEvents
            .GroupBy(e => e.ArchetypeName)
            .ToDictionary(g => g.Key, g => g.Count());
    }

    /// <summary>
    /// –ü–æ–ª—É—á–∞–µ—Ç —Å–∞–º—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π –∞—Ä—Ö–µ—Ç–∏–ø
    /// </summary>
    private string GetMostActiveArchetype()
    {
        var distribution = GetArchetypeDistribution();
        return distribution.Any() ? distribution.OrderByDescending(kvp => kvp.Value).First().Key : "none";
    }
}

/// <summary>
/// –ê—Ä—Ö–µ—Ç–∏–ø
/// </summary>
public class Archetype
{
    public string Name { get; set; } = string.Empty;
    public string Description { get; set; } = string.Empty;
    public string[] Symbols { get; set; } = Array.Empty<string>();
    public string[] Emotions { get; set; } = Array.Empty<string>();
    public string[] ActivationTriggers { get; set; } = Array.Empty<string>();
}

/// <summary>
/// –ö—É–ª—å—Ç—É—Ä–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω
/// </summary>
public class CulturalPattern
{
    public string Name { get; set; } = string.Empty;
    public string Description { get; set; } = string.Empty;
    public string[] UniversalElements { get; set; } = Array.Empty<string>();
    public string[] EmotionalThemes { get; set; } = Array.Empty<string>();
}

/// <summary>
/// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∂–∏–≤–∞–Ω–∏–µ
/// </summary>
public class UniversalExperience
{
    public string Name { get; set; } = string.Empty;
    public string Description { get; set; } = string.Empty;
    public string[] ArchetypalElements { get; set; } = Array.Empty<string>();
    public double EmotionalIntensity { get; set; } = 0.5;
    public string[] CulturalVariations { get; set; } = Array.Empty<string>();
    public double RelevanceScore { get; set; } = 0.0;
}

/// <summary>
/// –ê—Ä—Ö–µ—Ç–∏–ø–∏—á–µ—Å–∫–∞—è –∞–∫—Ç–∏–≤–∞—Ü–∏—è
/// </summary>
public class ArchetypalActivation
{
    public Archetype? Archetype { get; set; }
    public double Intensity { get; set; } = 0.0;
    public string Description { get; set; } = string.Empty;
    public DateTime Timestamp { get; set; }
}

/// <summary>
/// –ê—Ä—Ö–µ—Ç–∏–ø–∏—á–µ—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ
/// </summary>
public class ArchetypalEvent
{
    public string ArchetypeName { get; set; } = string.Empty;
    public string Context { get; set; } = string.Empty;
    public string Emotion { get; set; } = string.Empty;
    public double Intensity { get; set; } = 0.0;
    public DateTime Timestamp { get; set; }
}

/// <summary>
/// –°—Ç–∞—Ç—É—Å –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –±–µ—Å—Å–æ–∑–Ω–∞—Ç–µ–ª—å–Ω–æ–≥–æ
/// </summary>
public class CollectiveUnconsciousStatus
{
    public double CollectiveUnconsciousDepth { get; set; } = 0.0;
    public int TotalArchetypes { get; set; } = 0;
    public int TotalCulturalPatterns { get; set; } = 0;
    public int TotalUniversalExperiences { get; set; } = 0;
    public List<ArchetypalEvent> RecentArchetypalEvents { get; set; } = new();
    public DateTime LastArchetypalActivation { get; set; }
}

/// <summary>
/// –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞—Ä—Ö–µ—Ç–∏–ø–æ–≤
/// </summary>
public class ArchetypalStatistics
{
    public int TotalArchetypalEvents { get; set; } = 0;
    public Dictionary<string, int> ArchetypeDistribution { get; set; } = new();
    public string MostActiveArchetype { get; set; } = string.Empty;
    public double AverageIntensity { get; set; } = 0.0;
    public List<ArchetypalEvent> RecentActivations { get; set; } = new();
} 
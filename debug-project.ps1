# Debug Project Script for Anima AGI
Write-Host "üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º —Å Anima AGI..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ .NET
Write-Host "`n1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ .NET..." -ForegroundColor Yellow
try {
    $dotnetVersion = dotnet --version
    Write-Host "‚úÖ .NET –Ω–∞–π–¥–µ–Ω: $dotnetVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå .NET –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
Write-Host "`n2Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
$requiredFiles = @(
    "Anima.AGI.csproj",
    "Program.cs",
    "appsettings.json"
)

foreach ($file in $requiredFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $file –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $file –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    }
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
Write-Host "`n3Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..." -ForegroundColor Yellow
try {
    dotnet restore --verbosity quiet
    Write-Host "‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π" -ForegroundColor Red
}

# –ü—Ä–æ–±—É–µ–º —Å–æ–±—Ä–∞—Ç—å –ø—Ä–æ–µ–∫—Ç
Write-Host "`n4Ô∏è‚É£ –°–±–æ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..." -ForegroundColor Yellow
try {
    $buildOutput = dotnet build --verbosity minimal 2>&1
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ –ü—Ä–æ–µ–∫—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏:" -ForegroundColor Red
        Write-Host $buildOutput -ForegroundColor Red
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–∫–µ" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
Write-Host "`n5Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..." -ForegroundColor Yellow
try {
    $config = Get-Content "appsettings.json" | ConvertFrom-Json
    Write-Host "‚úÖ appsettings.json –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π" -ForegroundColor Green
    
    if ($config.ConnectionStrings.DefaultConnection) {
        Write-Host "‚úÖ –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –≤ appsettings.json" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
Write-Host "`n6Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..." -ForegroundColor Yellow
$directories = @("data", "logs", "ssl")
foreach ($dir in $directories) {
    if (Test-Path $dir) {
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç" -ForegroundColor Yellow
        New-Item -ItemType Directory -Force -Path $dir | Out-Null
        Write-Host "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $dir —Å–æ–∑–¥–∞–Ω–∞" -ForegroundColor Green
    }
}

Write-Host "`nüéØ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: dotnet run" -ForegroundColor Cyan 